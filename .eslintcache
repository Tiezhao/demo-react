[{"F:\\student-info\\demo\\src\\index.js":"1","F:\\student-info\\demo\\src\\App.js":"2","F:\\student-info\\demo\\src\\views\\login\\index.js":"3","F:\\student-info\\demo\\src\\views\\login\\loginForm\\index.js":"4","F:\\student-info\\demo\\src\\views\\login\\registerForm\\index.js":"5","F:\\student-info\\demo\\src\\utils\\validate.js":"6","F:\\student-info\\demo\\src\\api\\account.js":"7","F:\\student-info\\demo\\src\\utils\\request.js":"8","F:\\student-info\\demo\\src\\components\\code\\index.js":"9","F:\\student-info\\demo\\src\\components\\privateRouter\\index.js":"10","F:\\student-info\\demo\\src\\utils\\session.js":"11","F:\\student-info\\demo\\src\\views\\layout\\containMain\\index.js":"12","F:\\student-info\\demo\\src\\views\\layout\\containMain\\component\\homeList.js":"13","F:\\student-info\\demo\\src\\views\\layout\\containMain\\component\\studentList.js":"14","F:\\student-info\\demo\\src\\views\\layout\\containMain\\component\\teacherList.js":"15","F:\\student-info\\demo\\src\\views\\layout\\index.js":"16","F:\\student-info\\demo\\src\\views\\layout\\aside\\index.js":"17"},{"size":220,"mtime":1610458491692,"results":"18","hashOfConfig":"19"},{"size":533,"mtime":1611083765868,"results":"20","hashOfConfig":"19"},{"size":962,"mtime":1610979425387,"results":"21","hashOfConfig":"19"},{"size":5933,"mtime":1611082326192,"results":"22","hashOfConfig":"19"},{"size":6226,"mtime":1611038237358,"results":"23","hashOfConfig":"19"},{"size":307,"mtime":1610866097295,"results":"24","hashOfConfig":"19"},{"size":752,"mtime":1610995009902,"results":"25","hashOfConfig":"19"},{"size":838,"mtime":1610819823344,"results":"26","hashOfConfig":"19"},{"size":2834,"mtime":1610994273057,"results":"27","hashOfConfig":"19"},{"size":586,"mtime":1611056501380,"results":"28","hashOfConfig":"19"},{"size":413,"mtime":1611056630105,"results":"29","hashOfConfig":"19"},{"size":762,"mtime":1611085118174,"results":"30","hashOfConfig":"19"},{"size":239,"mtime":1611084297409,"results":"31","hashOfConfig":"19"},{"size":2082,"mtime":1611084295061,"results":"32","hashOfConfig":"19"},{"size":149,"mtime":1611084303683,"results":"33","hashOfConfig":"19"},{"size":460,"mtime":1611082642856,"results":"34","hashOfConfig":"19"},{"size":3261,"mtime":1611155894653,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"19wat03",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\student-info\\demo\\src\\index.js",[],["75","76"],"F:\\student-info\\demo\\src\\App.js",[],"F:\\student-info\\demo\\src\\views\\login\\index.js",["77"],"import React, { Component, Fragment } from \"react\";\r\nimport \"./index.scss\";\r\nimport LoginForm from \"./loginForm/index\";\r\nimport RegisterForm from \"./registerForm/index\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    formType: \"login\",\r\n  };\r\n  // 调用changeForm改变formType\r\n  changeForm = (value) => {\r\n    this.setState({ formType: value });\r\n    // console.log(value);\r\n  };\r\n  render() {\r\n    const { formType } = this.state;\r\n    return (\r\n      <div className=\"login-warp\">\r\n        {formType === \"login\" ? (\r\n          // 父组件先定义了一个方法changeForm，在调用子组件LoginForm的时候把这个方法传递进去，传的时候给这个方法换了个别名changeFormType替代，子组件接受的方法就是这个别名\r\n          <LoginForm changeFormType={this.changeForm} />\r\n        ) : (\r\n          <RegisterForm changeFormType={this.changeForm} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","F:\\student-info\\demo\\src\\views\\login\\loginForm\\index.js",["78"],"import React, { Component, Fragment } from \"react\";\r\nimport { Form, Input, Button, Row, Col } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { withRouter } from \"react-router-dom\";\r\n//导入api\r\nimport { Login } from \"../../../api/account\";\r\n////导入密码正则，邮箱正则\r\nimport { valid_password_neg } from \"../../../utils/validate\";\r\nimport Code from \"../../../components/code/index\";\r\nimport { setToken } from \"../../../utils/session\";\r\nimport \"./index.scss\";\r\nclass LoginForm extends Component {\r\n  state = {\r\n    username: \"\",\r\n    module: \"login\",\r\n    password: \"\",\r\n    code: \"\",\r\n    loading: false,\r\n  };\r\n\r\n  //获取到用户名输入框实时数据并更新到state的username中\r\n  usernameChange = (e) => {\r\n    // console.log(e.target.value);\r\n    this.setState({ username: e.target.value });\r\n  };\r\n  passwordChange = (e) => {\r\n    // console.log(e.target.value);\r\n    this.setState({ password: e.target.value });\r\n  };\r\n  codeChange = (e) => {\r\n    // console.log(e.target.value);\r\n    this.setState({ code: e.target.value });\r\n  };\r\n\r\n  // 登录， 登录时调用该方法会打印出输入的用户名、密码等\r\n  onFinish = (values) => {\r\n    this.setState({ loading: true });\r\n    const requestData = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      code: this.state.code,\r\n    };\r\n    Login(requestData)\r\n      .then((response) => {\r\n        // console.log(response.data.data.token);\r\n        //登陆成功后将token暂时存储到浏览器\r\n        setToken(response.data.data.token);\r\n        this.props.history.push(\"/index\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Received values of form: \", error);\r\n      });\r\n  };\r\n\r\n  //切换到注册页面\r\n  changeRegister = () => {\r\n    //子组件接收收到父组件传进来的数据，用this.props接收，打印this.props会发现有changeFormType一个方法，这就是父组件传进来的方法，调用这个方法时要有实参，否则父组件的形参会undefined\r\n    //调用这个方法就相当于执行父组件传进来的方法\r\n    this.props.changeFormType(\"register\");\r\n  };\r\n\r\n  render() {\r\n    const { username, module, loading } = this.state;\r\n    return (\r\n      <div className=\"loginForm-warp\">\r\n        <div className=\"loginForm-header\">\r\n          <h3 className=\"cloumn\">登录</h3>\r\n          <span className=\"title\" onClick={this.changeRegister}>\r\n            账号注册\r\n          </span>\r\n        </div>\r\n        <div className=\"loginForm-content\">\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"邮箱不能为空！\",\r\n                },\r\n                // ({ getFieldValue }) => ({\r\n                //   validator(_, value) {\r\n                //     if (validate_email(value)) {\r\n                //       _this.setState({ code_disabled: false });\r\n                //       return Promise.resolve();\r\n                //     }\r\n                //     return Promise.reject(\"邮箱格式不正确！\");\r\n                //   },\r\n                // }),\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Username\"\r\n                onChange={this.usernameChange}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"密码不能为空！\",\r\n                },\r\n                //利用pattern正则作判断\r\n                {\r\n                  pattern: valid_password_neg,\r\n                  message: \"密码必须是大于6位小于20位的数字+字母\",\r\n                },\r\n              ]}\r\n              // 状态符，当输入错误时会出现红叉叉，正确会出现绿色的√\r\n              hasFeedback\r\n            >\r\n              <Input.Password\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={this.passwordChange}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"Code\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"验证码不能为空!\",\r\n                },\r\n                {\r\n                  len: 6,\r\n                  message: \"请输入长度为6位的验证码!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Row gutter={13}>\r\n                <Col span={15}>\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"text\"\r\n                    placeholder=\"Code\"\r\n                    onChange={this.codeChange}\r\n                  />\r\n                </Col>\r\n                <Col span={8} style={{ paddingLeft: 8.5 }}>\r\n                  <Code username={username} module={module} />\r\n                </Col>\r\n              </Row>\r\n            </Form.Item>\r\n            {/* 点击登录按钮后会触发头部Form的onFinish */}\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                style={{ width: \"100%\" }}\r\n                loading={loading}\r\n              >\r\n                登录\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LoginForm);\r\n","F:\\student-info\\demo\\src\\views\\login\\registerForm\\index.js",["79","80"],"import React, { Component, Fragment } from \"react\";\r\nimport { Form, Input, Button, Row, Col, message } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Code from \"../../../components/code/index\";\r\nimport { Register } from \"../../../api/account\";\r\nimport { valid_password_neg } from \"../../../utils/validate\";\r\nimport \"./index.scss\";\r\n\r\nclass RegisterForm extends Component {\r\n  state = {\r\n    username: \"\",\r\n    module: \"register\",\r\n    password: \"\",\r\n    code: \"\",\r\n  };\r\n\r\n  onFinish = (values) => {\r\n    const requestData = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      code: this.state.code,\r\n    };\r\n    Register(requestData)\r\n      .then((response) => {\r\n        message.success(response.data.message);\r\n        if (response.data.resCode === 0) {\r\n          this.changeLogin();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Received values of form: \", error);\r\n      });\r\n  };\r\n\r\n  usernameChange = (e) => {\r\n    // console.log(e.target.value);\r\n    this.setState({ username: e.target.value });\r\n  };\r\n  passwordChange = (e) => {\r\n    // console.log(e.target.value);\r\n    this.setState({ password: e.target.value });\r\n  };\r\n  codeChange = (e) => {\r\n    // console.log(e.target.value);\r\n    this.setState({ code: e.target.value });\r\n  };\r\n\r\n  //切换到登录页面\r\n  changeLogin = () => {\r\n    this.props.changeFormType(\"login\");\r\n  };\r\n\r\n  render() {\r\n    const { username, module } = this.state;\r\n    return (\r\n      <div className=\"registerForm-warp\">\r\n        <div className=\"registerForm-header\">\r\n          <h3 className=\"cloumn\">注册</h3>\r\n          <span className=\"title\" onClick={this.changeLogin}>\r\n            登录\r\n          </span>\r\n        </div>\r\n        <div className=\"registerForm-content\">\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"用户名不能为空！\",\r\n                },\r\n                {\r\n                  type: \"email\",\r\n                  message: \"邮箱格式不正确!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Username\"\r\n                onChange={this.usernameChange}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"密码不能为空！\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!valid_password_neg.test(value)) {\r\n                      return Promise.reject(\r\n                        \"密码必须是大于6位小于20位的数字+字母\"\r\n                      );\r\n                    }\r\n                    if (\r\n                      getFieldValue(\"confirmPassword\") &&\r\n                      value != getFieldValue(\"confirmPassword\")\r\n                    ) {\r\n                      return Promise.reject(\"两次密码不一致！\");\r\n                    }\r\n                    return Promise.resolve();\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={this.passwordChange}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"confirmPassword\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"密码不能为空！\",\r\n                },\r\n                // getFieldValue方法可用于获取其他输入框输入的值，这里利用它从而获取到密码框输入的值，从而判断密码与确认密码是否一致\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    // console.log(getFieldValue(\"password\"));\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\"两次密码不一致！\");\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"Code\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"验证码不能为空！\",\r\n                },\r\n                {\r\n                  len: 6,\r\n                  message: \"请输入长度为6位的验证码!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Row gutter={13}>\r\n                <Col span={15}>\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"text\"\r\n                    placeholder=\"Code\"\r\n                    onChange={this.codeChange}\r\n                  />\r\n                </Col>\r\n                <Col span={8} style={{ paddingLeft: 8.5 }}>\r\n                  <Code username={username} module={module} />\r\n                </Col>\r\n              </Row>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                注册\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","F:\\student-info\\demo\\src\\utils\\validate.js",[],"F:\\student-info\\demo\\src\\api\\account.js",[],"F:\\student-info\\demo\\src\\utils\\request.js",[],"F:\\student-info\\demo\\src\\components\\code\\index.js",["81"],"import React, { Component, Fragment } from \"react\";\r\nimport { Button, message } from \"antd\";\r\nimport { GetCode } from \"../../api/account\";\r\nimport { validate_email } from \"../../utils/validate\";\r\n\r\nimport \"./index.scss\";\r\n\r\nvar timer = null;\r\n\r\nclass Code extends Component {\r\n  state = {\r\n    username: \"\",\r\n    code_disabled: false,\r\n    code_loading: false,\r\n    code_text: \"获取验证码\",\r\n    module: \"\",\r\n  };\r\n\r\n  //子组件获取到父组件传进来的props\r\n  componentWillReceiveProps({ username, module }) {\r\n    // console.log(this.props.username);//可以用解构赋值，不一定非要用this.props来获取\r\n    // console.log(username);\r\n    this.setState({ username, module });\r\n  }\r\n\r\n  //组件被销毁时清除定时器\r\n  componentWillUnmount() {\r\n    clearInterval(timer);\r\n  }\r\n  //获取验证码\r\n  getCode = () => {\r\n    // alert(this.state.username);\r\n    if (this.state.username === \"\") {\r\n      message.warning(\"用户名不能为空！\", 2);\r\n      return;\r\n    }\r\n    if (!validate_email(this.state.username)) {\r\n      message.warning(\"邮箱格式不正确！\", 2);\r\n      return;\r\n    }\r\n    if (this.state.username) {\r\n      this.setState({\r\n        code_loading: true,\r\n        code_text: \"发送中\",\r\n      });\r\n    }\r\n\r\n    const requestData = {\r\n      username: this.state.username,\r\n      module: this.state.module,\r\n    };\r\n    //调用axios接口来发送验证码请求\r\n    GetCode(requestData)\r\n      .then((response) => {\r\n        //发送验证码请求成功则调用resolve\r\n        //发送验证码请求则提示发送成功\r\n        // console.log(response.data.message);\r\n        //拿到验证码\r\n        message.success(`${response.data.message}`, 2);\r\n        this.countDown();\r\n      })\r\n      .catch((error) => {\r\n        //失败则调用reject\r\n        this.setState({\r\n          code_loading: false,\r\n          code_text: \"重新发送\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //登录倒计时\r\n  countDown = () => {\r\n    let second = 5;\r\n    this.setState({\r\n      code_loading: false,\r\n      code_text: `${second}s`,\r\n      code_disabled: true,\r\n    });\r\n    timer = setInterval(() => {\r\n      second--;\r\n      if (second <= 0) {\r\n        this.setState({\r\n          code_text: \"重新获取\",\r\n          code_disabled: false,\r\n        });\r\n        //销毁定时器\r\n        clearInterval(timer);\r\n        return;\r\n      }\r\n      this.setState({\r\n        code_text: `${second}s`,\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    const { code_disabled } = this.state;\r\n    return (\r\n      <Button\r\n        type=\"danger\"\r\n        disabled={code_disabled}\r\n        onClick={this.getCode}\r\n        loading={this.state.code_loading}\r\n        className=\"code-button\"\r\n      >\r\n        {this.state.code_text}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Code;\r\n","F:\\student-info\\demo\\src\\components\\privateRouter\\index.js",[],"F:\\student-info\\demo\\src\\utils\\session.js",[],"F:\\student-info\\demo\\src\\views\\layout\\containMain\\index.js",["82","83","84"],"F:\\student-info\\demo\\src\\views\\layout\\containMain\\component\\homeList.js",[],"F:\\student-info\\demo\\src\\views\\layout\\containMain\\component\\studentList.js",["85","86"],"F:\\student-info\\demo\\src\\views\\layout\\containMain\\component\\teacherList.js",[],"F:\\student-info\\demo\\src\\views\\layout\\index.js",[],"F:\\student-info\\demo\\src\\views\\layout\\aside\\index.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":28,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"92","line":1,"column":28,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"92","line":1,"column":28,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"96","line":108,"column":29,"nodeType":"97","messageId":"98","endLine":108,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":1,"column":28,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"99","line":3,"column":20,"nodeType":"93","messageId":"94","endLine":3,"endColumn":26},{"ruleId":"91","severity":1,"message":"100","line":4,"column":3,"nodeType":"93","messageId":"94","endLine":4,"endColumn":8},{"ruleId":"91","severity":1,"message":"101","line":5,"column":3,"nodeType":"93","messageId":"94","endLine":5,"endColumn":11},{"ruleId":"91","severity":1,"message":"102","line":2,"column":17,"nodeType":"93","messageId":"94","endLine":2,"endColumn":20},{"ruleId":"91","severity":1,"message":"103","line":2,"column":22,"nodeType":"93","messageId":"94","endLine":2,"endColumn":27},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Router' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","no-global-assign","no-unsafe-negation"]